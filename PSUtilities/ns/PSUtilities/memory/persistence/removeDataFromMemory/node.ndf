<?xml version="1.0" encoding="UTF-8"?>

<Values version="2.0">
  <value name="svc_type">java</value>
  <value name="svc_subtype">default</value>
  <value name="svc_sigtype">java 3.5</value>
  <record name="svc_sig" javaclass="com.wm.util.Values">
    <record name="sig_in" javaclass="com.wm.util.Values">
      <value name="node_type">record</value>
      <value name="field_name">removeDataFromMemoryInput</value>
      <value name="field_type">record</value>
      <value name="field_dim">0</value>
      <value name="nillable">true</value>
      <array name="rec_fields" type="record" depth="1">
        <record javaclass="com.wm.util.Values">
          <value name="node_type">unknown</value>
          <value name="field_name">MemoryKey</value>
          <value name="field_type">string</value>
          <value name="field_dim">0</value>
          <value name="nillable">true</value>
        </record>
      </array>
    </record>
  </record>
  <value name="node_comment">====================================================================

     *** EXAMPLE CODE -- NOT INTENDED FOR PRODUCTION USE  ***

====================================================================

This service removes the MemoryData record associated with the
provided MemoryKey.  If the service finds a key matching  your
MemoryKey it will remove the record associated.

To run this service, click on "Ctrl-R" and observe a the MemoryData
record that was removed.  If no MemoryData object appears as output, 
then the service did not find your key in memory.  After running 
this service, execute sample.memory.persistence:listKeysInMemory and
notice that your key is no longer there.  Another verification 
would be to run sample.memory.persistence:getDataFromMemory and 
notice that no information will be returned to you.

This service is provided as an example of one way that you might
accomplish this task. As a member of the WmSamples package, this
service is subject to modification or removal, without notice, 
in future versions of the product.

This service is not a member of the webMethods library and should
not be used in a production solution.

====================================================================</value>
  <value name="stateless">no</value>
  <value name="caching">no</value>
  <value name="prefetch">no</value>
  <value name="cache_ttl">15</value>
  <value name="prefetch_level">1</value>
  <value name="audit_level">off</value>
  <value name="check_internal_acls">no</value>
  <value name="icontext_policy">$null</value>
  <value name="system_service">no</value>
  <value name="retry_max">0</value>
  <value name="retry_interval">0</value>
  <value name="svc_in_validator_options">none</value>
  <value name="svc_out_validator_options">none</value>
  <value name="auditoption">0</value>
  <record name="auditsettings" javaclass="com.wm.util.Values">
    <value name="document_data">1</value>
    <value name="startExecution">false</value>
    <value name="stopExecution">false</value>
    <value name="onError">true</value>
  </record>
</Values>
